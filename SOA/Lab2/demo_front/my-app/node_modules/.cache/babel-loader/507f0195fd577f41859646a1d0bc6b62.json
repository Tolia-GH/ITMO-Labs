{"ast":null,"code":"var _jsxFileName = \"/Users/2398768715qq.com/GitHub/ITMO-Labs/SOA/Lab2/demo_front/my-app/src/components/main/main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Main() {\n  _s();\n\n  // 状态管理\n  const [listParams, setListParams] = useState({\n    sort: 'id',\n    order: 'ASC',\n    filter: '',\n    page: 0,\n    pageSize: 10\n  });\n  const [getById, setGetById] = useState('');\n  const [postData, setPostData] = useState({\n    name: '',\n    x: '',\n    y: '',\n    health: '',\n    heartCount: '',\n    height: '',\n    meleeWeapon: 'CHAIN_SWORD',\n    chapterName: '',\n    chapterWorld: ''\n  });\n  const [responses, setResponses] = useState({\n    list: '',\n    byId: '',\n    post: ''\n  }); // 通用样式\n\n  const styles = {\n    body: {\n      fontFamily: 'Arial, sans-serif',\n      margin: '20px'\n    },\n    h2: {\n      color: '#333'\n    },\n    form: {\n      marginBottom: '20px',\n      padding: '10px',\n      border: '1px solid #ccc'\n    },\n    label: {\n      display: 'block',\n      marginTop: '8px'\n    },\n    input: {\n      width: '100%',\n      padding: '4px',\n      marginTop: '4px'\n    },\n    response: {\n      background: '#f7f7f7',\n      border: '1px dashed #aaa',\n      padding: '10px',\n      whiteSpace: 'pre-wrap'\n    }\n  }; // 处理GET列表请求\n\n  const handleGetList = async e => {\n    e.preventDefault();\n    let url = `v1/space-marine?sort=${encodeURIComponent(listParams.sort)}` + `&order=${encodeURIComponent(listParams.order)}` + `&page=${encodeURIComponent(listParams.page)}` + `&pageSize=${encodeURIComponent(listParams.pageSize)}`;\n\n    if (listParams.filter) {\n      listParams.filter.split(',').forEach(f => {\n        url += `&filter=${encodeURIComponent(f.trim())}`;\n      });\n    }\n\n    try {\n      const response = await fetch(url);\n      const data = await response.text();\n      const formatted = formatXML(new DOMParser().parseFromString(data, \"text/xml\"));\n      setResponses(prev => ({ ...prev,\n        list: formatted\n      }));\n    } catch (err) {\n      setResponses(prev => ({ ...prev,\n        list: `Error: ${err.message}`\n      }));\n    }\n  }; // 处理GET by ID请求\n\n\n  const handleGetById = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`v1/space-marine/${encodeURIComponent(getById)}`);\n      const data = await response.text();\n      const formatted = formatXML(new DOMParser().parseFromString(data, \"text/xml\"));\n      setResponses(prev => ({ ...prev,\n        byId: formatted\n      }));\n    } catch (err) {\n      setResponses(prev => ({ ...prev,\n        byId: `Error: ${err.message}`\n      }));\n    }\n  }; // 处理POST请求\n\n\n  const handlePost = async e => {\n    e.preventDefault();\n    const xml = `<newSpaceMarine>\n  <name>${postData.name}</name>\n  <coordinates>\n    <x>${postData.x}</x>\n    <y>${postData.y}</y>\n  </coordinates>\n  <health>${postData.health}</health>\n  <heartCount>${postData.heartCount}</heartCount>\n  <height>${postData.height}</height>\n  <meleeWeapon>${postData.meleeWeapon}</meleeWeapon>\n  <chapter>\n    <name>${postData.chapterName}</name>\n    <world>${postData.chapterWorld}</world>\n  </chapter>\n</newSpaceMarine>`;\n\n    try {\n      const response = await fetch('v1/space-marine', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/xml'\n        },\n        body: xml\n      });\n      const data = await response.text();\n      const formatted = formatXML(new DOMParser().parseFromString(data, \"text/xml\"));\n      setResponses(prev => ({ ...prev,\n        post: formatted\n      }));\n    } catch (err) {\n      setResponses(prev => ({ ...prev,\n        post: `Error: ${err.message}`\n      }));\n    }\n  }; // XML格式化函数\n\n\n  const formatXML = xmlDoc => {\n    const xslt = `<?xml version=\"1.0\"?>\n      <xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n        <xsl:output method=\"xml\" indent=\"yes\"/>\n        <xsl:template match=\"/\">\n          <xsl:copy-of select=\".\"/>\n        </xsl:template>\n      </xsl:stylesheet>`;\n    const parser = new DOMParser();\n    const xsltDoc = parser.parseFromString(xslt, \"application/xml\");\n    const processor = new XSLTProcessor();\n    processor.importStylesheet(xsltDoc);\n    const result = processor.transformToDocument(xmlDoc);\n    return new XMLSerializer().serializeToString(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.body,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SpaceMarine API Test Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.h2,\n        children: \"Get SpaceMarine List (GET /space-marine)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: styles.form,\n        onSubmit: handleGetList,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"(sort):\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: listParams.sort,\n            onChange: e => setListParams(p => ({ ...p,\n              sort: e.target.value\n            })),\n            style: styles.input,\n            children: ['id', 'name', 'creationDate', 'health', 'heartCount', 'height'].map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: opt,\n              children: opt\n            }, opt, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send GET request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: styles.response,\n        children: responses.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.h2,\n        children: [\"Get by ID (GET /space-marine/\", \"{id}\", \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: styles.form,\n        onSubmit: handleGetById,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: getById,\n            onChange: e => setGetById(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send GET request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: styles.response,\n        children: responses.byId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.h2,\n        children: \"Add SpaceMarine (POST /space-marine)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: styles.form,\n        onSubmit: handlePost,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            value: postData.name,\n            onChange: e => setPostData(p => ({ ...p,\n              name: e.target.value\n            })),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send POST request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: styles.response,\n        children: responses.post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"XpwuUPIi8+EIkmRMhLyro6FDilo=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/2398768715qq.com/GitHub/ITMO-Labs/SOA/Lab2/demo_front/my-app/src/components/main/main.jsx"],"names":["React","useState","Main","listParams","setListParams","sort","order","filter","page","pageSize","getById","setGetById","postData","setPostData","name","x","y","health","heartCount","height","meleeWeapon","chapterName","chapterWorld","responses","setResponses","list","byId","post","styles","body","fontFamily","margin","h2","color","form","marginBottom","padding","border","label","display","marginTop","input","width","response","background","whiteSpace","handleGetList","e","preventDefault","url","encodeURIComponent","split","forEach","f","trim","fetch","data","text","formatted","formatXML","DOMParser","parseFromString","prev","err","message","handleGetById","handlePost","xml","method","headers","xmlDoc","xslt","parser","xsltDoc","processor","XSLTProcessor","importStylesheet","result","transformToDocument","XMLSerializer","serializeToString","p","target","value","map","opt"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport function Main() {\n    // 状态管理\n    const [listParams, setListParams] = useState({\n        sort: 'id',\n        order: 'ASC',\n        filter: '',\n        page: 0,\n        pageSize: 10\n    });\n    const [getById, setGetById] = useState('');\n    const [postData, setPostData] = useState({\n        name: '',\n        x: '',\n        y: '',\n        health: '',\n        heartCount: '',\n        height: '',\n        meleeWeapon: 'CHAIN_SWORD',\n        chapterName: '',\n        chapterWorld: ''\n    });\n    const [responses, setResponses] = useState({\n        list: '',\n        byId: '',\n        post: ''\n    });\n\n    // 通用样式\n    const styles = {\n        body: { fontFamily: 'Arial, sans-serif', margin: '20px' },\n        h2: { color: '#333' },\n        form: { marginBottom: '20px', padding: '10px', border: '1px solid #ccc' },\n        label: { display: 'block', marginTop: '8px' },\n        input: { width: '100%', padding: '4px', marginTop: '4px' },\n        response: {\n            background: '#f7f7f7',\n            border: '1px dashed #aaa',\n            padding: '10px',\n            whiteSpace: 'pre-wrap'\n        }\n    };\n\n    // 处理GET列表请求\n    const handleGetList = async (e) => {\n        e.preventDefault();\n        let url = `v1/space-marine?sort=${encodeURIComponent(listParams.sort)}` +\n            `&order=${encodeURIComponent(listParams.order)}` +\n            `&page=${encodeURIComponent(listParams.page)}` +\n            `&pageSize=${encodeURIComponent(listParams.pageSize)}`;\n\n        if (listParams.filter) {\n            listParams.filter.split(',').forEach(f => {\n                url += `&filter=${encodeURIComponent(f.trim())}`;\n            });\n        }\n\n        try {\n            const response = await fetch(url);\n            const data = await response.text();\n            const formatted = formatXML(new DOMParser().parseFromString(data, \"text/xml\"));\n            setResponses(prev => ({...prev, list: formatted}));\n        } catch (err) {\n            setResponses(prev => ({...prev, list: `Error: ${err.message}`}));\n        }\n    };\n\n    // 处理GET by ID请求\n    const handleGetById = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`v1/space-marine/${encodeURIComponent(getById)}`);\n            const data = await response.text();\n            const formatted = formatXML(new DOMParser().parseFromString(data, \"text/xml\"));\n            setResponses(prev => ({...prev, byId: formatted}));\n        } catch (err) {\n            setResponses(prev => ({...prev, byId: `Error: ${err.message}`}));\n        }\n    };\n\n    // 处理POST请求\n    const handlePost = async (e) => {\n        e.preventDefault();\n        const xml = `<newSpaceMarine>\n  <name>${postData.name}</name>\n  <coordinates>\n    <x>${postData.x}</x>\n    <y>${postData.y}</y>\n  </coordinates>\n  <health>${postData.health}</health>\n  <heartCount>${postData.heartCount}</heartCount>\n  <height>${postData.height}</height>\n  <meleeWeapon>${postData.meleeWeapon}</meleeWeapon>\n  <chapter>\n    <name>${postData.chapterName}</name>\n    <world>${postData.chapterWorld}</world>\n  </chapter>\n</newSpaceMarine>`;\n\n        try {\n            const response = await fetch('v1/space-marine', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/xml'},\n                body: xml\n            });\n            const data = await response.text();\n            const formatted = formatXML(new DOMParser().parseFromString(data, \"text/xml\"));\n            setResponses(prev => ({...prev, post: formatted}));\n        } catch (err) {\n            setResponses(prev => ({...prev, post: `Error: ${err.message}`}));\n        }\n    };\n\n    // XML格式化函数\n    const formatXML = (xmlDoc) => {\n        const xslt = `<?xml version=\"1.0\"?>\n      <xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n        <xsl:output method=\"xml\" indent=\"yes\"/>\n        <xsl:template match=\"/\">\n          <xsl:copy-of select=\".\"/>\n        </xsl:template>\n      </xsl:stylesheet>`;\n\n        const parser = new DOMParser();\n        const xsltDoc = parser.parseFromString(xslt, \"application/xml\");\n        const processor = new XSLTProcessor();\n        processor.importStylesheet(xsltDoc);\n\n        const result = processor.transformToDocument(xmlDoc);\n        return new XMLSerializer().serializeToString(result);\n    };\n\n    return (\n        <div style={styles.body}>\n            <h1>SpaceMarine API Test Page</h1>\n\n            {/* GET 列表表单 */}\n            <section>\n                <h2 style={styles.h2}>Get SpaceMarine List (GET /space-marine)</h2>\n                <form style={styles.form} onSubmit={handleGetList}>\n                    <label style={styles.label}>\n                        (sort):\n                        <select\n                            value={listParams.sort}\n                            onChange={e => setListParams(p => ({...p, sort: e.target.value}))}\n                            style={styles.input}\n                        >\n                            {['id', 'name', 'creationDate', 'health', 'heartCount', 'height'].map(opt => (\n                                <option key={opt} value={opt}>{opt}</option>\n                            ))}\n                        </select>\n                    </label>\n\n                    {/* 其他表单字段类似处理 */}\n                    {/* ... */}\n\n                    <button type=\"submit\">Send GET request</button>\n                </form>\n                <pre style={styles.response}>{responses.list}</pre>\n            </section>\n\n            <hr />\n\n            {/* GET by ID 表单 */}\n            <section>\n                <h2 style={styles.h2}>Get by ID (GET /space-marine/{\"{id}\"})</h2>\n                <form style={styles.form} onSubmit={handleGetById}>\n                    <label style={styles.label}>\n                        ID:\n                        <input\n                            type=\"number\"\n                            value={getById}\n                            onChange={e => setGetById(e.target.value)}\n                            style={styles.input}\n                        />\n                    </label>\n                    <button type=\"submit\">Send GET request</button>\n                </form>\n                <pre style={styles.response}>{responses.byId}</pre>\n            </section>\n\n            <hr />\n\n            {/* POST 表单 */}\n            <section>\n                <h2 style={styles.h2}>Add SpaceMarine (POST /space-marine)</h2>\n                <form style={styles.form} onSubmit={handlePost}>\n                    {/* 表单字段处理 */}\n                    <label style={styles.label}>\n                        Name:\n                        <input\n                            required\n                            value={postData.name}\n                            onChange={e => setPostData(p => ({...p, name: e.target.value}))}\n                            style={styles.input}\n                        />\n                    </label>\n\n                    {/* 其他字段类似处理 */}\n                    {/* ... */}\n\n                    <button type=\"submit\">Send POST request</button>\n                </form>\n                <pre style={styles.response}>{responses.post}</pre>\n            </section>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}